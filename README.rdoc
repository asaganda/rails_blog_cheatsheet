How to build a blog in rails guide/cheatsheet 
<!-- to read comments clearly make sure text in lower right reads “markdown”-->

open terminal
	cd into where your new blog should go
	type..
		<!-- this is the name of the new blog/project -->
		rails new project-name
		<!-- this creates all the files for the blog/project -->

open sublime
	open newly created project
	make sure all the files are there

checking
	open terminal
	type..
		rails s
	open browser
	should see the rails guide

open terminal
	type..
		<!-- this initializes empty repository -->
		git init
		<!-- make sure all the files are untracked (in red) -->
		git status
		<!-- add files to be tracked -->
		git add .
		<!-- make sure all the files are now tracked (in green) -->
		git status
		<!-- make initial commit -->
		git commit -m "initial commit"

NOTE:
	Think about the new blog/project for a minute, what do you want to able to do?
		create a user (sign-up)
		login/logout (sign-in/sign-out)
		create posts
		edit/delete posts
		add comments
		admin user ability to delete comments (if spam or unwanted attention)

NOTE:
	Let's start with posts

open terminal
	type..
		<!-- this creates the view directory but not the view files -->
		<!-- you can also type rails g resources posts alternatively as well that will provide a bit more for blog/project...checkout guides.rubyonrails.org for reference --> 
		rails g controller posts

NOTE: 
	Now let's put in some routes

open sublime
	open config > routes.rb
	type..
		resources :posts
		<!-- if you want the posts to be in the root of your blog -->
		<!-- where, root = where it is going... posts = controller... index = action -->
		root "posts#index"

NOTE:
Now you know the PostsController needs the index action

open PostsController
	<!-- defining index action -->
	type..
		def index
		end

NOTE:
<!-- since we have generated a controller vs not using the resources we don't have a view > posts > index.html.erb file ...resources does this for you also. -->
<!-- Now we have to create that file manually. -->

open app > views > posts
	open blank file
	<!-- make sure it saves to views > posts -->
	save as index.html.erb
	type..
		<!-- filler text for checking -->
		this is posts index file
	open browser and refresh to check for text on screen

NOTE:
Next we want the ability to create new posts

open PostsController
	type..
		def new
		end

open browser
	<!-- checking... -->
	open /posts/new
	<!-- notice we don't have a template, so let's create one -->

create a view > posts new.html.erb file open new.html.erb
	create new post form
		<!-- check posts new.html.erb for code -->

open terminal
<!-- Now we have a new post form but not a model to go with it to save our data -->
	type..
		<!-- creates migration and model with info given -->
		rails g model Post title:string body:text
		<!-- check files after to confirm -->
		<!-- migrate database -->
		rake db:migrate

open PostsController
	<!-- in order to create new posts have to define create method -->
	type..
		def create
		<!-- check code -->
		end
		<!-- add private params and check code -->

create posts show.html.erb file
	<!-- this is where the post lives -->

open show.html.erb
	<!-- check code -->

open PostController
	<!-- define show -->
	type..
		def show
		<!-- check code -->
		end

NOTE:
<!-- checking... -->
<!-- open browser and create post any errors review the code -->

NOTE:
<!-- Now we want to list all of the posts at the root of the application -->

edit index action in PostController
<!-- check code -->

edit index.html.erb file
<!-- check code -->
<!-- checking... -->
<!-- create multiple posts and make sure they display with the info you want -->

open terminal
<!-- If you would like to push to github, create repository now, add remote and push -->
git commit the changes